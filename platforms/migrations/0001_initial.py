# Generated by Django 5.2.4 on 2025-07-23 00:26

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("products", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Platform",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="플랫폼명")),
                (
                    "platform_type",
                    models.CharField(
                        choices=[
                            ("SMARTSTORE", "스마트스토어"),
                            ("COUPANG", "쿠팡"),
                            ("GMARKET", "G마켓"),
                            ("AUCTION", "옥션"),
                            ("11ST", "11번가"),
                            ("TMON", "티몬"),
                            ("WMP", "위메프"),
                            ("SHOPIFY", "Shopify"),
                            ("AMAZON", "Amazon"),
                            ("OTHER", "기타"),
                        ],
                        max_length=20,
                        verbose_name="플랫폼 유형",
                    ),
                ),
                (
                    "api_key",
                    models.CharField(
                        blank=True, max_length=500, null=True, verbose_name="API 키"
                    ),
                ),
                (
                    "api_secret",
                    models.CharField(
                        blank=True, max_length=500, null=True, verbose_name="API 시크릿"
                    ),
                ),
                (
                    "api_url",
                    models.URLField(blank=True, null=True, verbose_name="API URL"),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="활성 상태"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="생성일시"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="수정일시"),
                ),
                (
                    "sync_enabled",
                    models.BooleanField(default=False, verbose_name="동기화 활성화"),
                ),
                (
                    "sync_interval",
                    models.IntegerField(default=60, verbose_name="동기화 간격(분)"),
                ),
                (
                    "last_sync_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="마지막 동기화 시간"
                    ),
                ),
                (
                    "last_sync_status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("success", "성공"),
                            ("error", "오류"),
                            ("running", "진행중"),
                        ],
                        max_length=20,
                        null=True,
                        verbose_name="마지막 동기화 상태",
                    ),
                ),
                (
                    "last_sync_message",
                    models.TextField(blank=True, verbose_name="마지막 동기화 메시지"),
                ),
                (
                    "api_endpoint",
                    models.URLField(
                        blank=True, null=True, verbose_name="API 엔드포인트"
                    ),
                ),
                ("description", models.TextField(blank=True, verbose_name="설명")),
            ],
            options={
                "verbose_name": "플랫폼",
                "verbose_name_plural": "플랫폼",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Supplier",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="업체명")),
                (
                    "code",
                    models.CharField(
                        max_length=50, unique=True, verbose_name="업체 코드"
                    ),
                ),
                (
                    "contact_person",
                    models.CharField(blank=True, max_length=100, verbose_name="담당자"),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="이메일"
                    ),
                ),
                (
                    "phone",
                    models.CharField(
                        blank=True, max_length=20, verbose_name="전화번호"
                    ),
                ),
                ("address", models.TextField(blank=True, verbose_name="주소")),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="활성 상태"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="생성일시"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="수정일시"),
                ),
            ],
            options={
                "verbose_name": "공급업체",
                "verbose_name_plural": "공급업체",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="PlatformProduct",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "platform_product_id",
                    models.CharField(max_length=100, verbose_name="플랫폼 상품 ID"),
                ),
                (
                    "platform_sku",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="플랫폼 SKU"
                    ),
                ),
                (
                    "platform_price",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="플랫폼 판매가"
                    ),
                ),
                (
                    "platform_stock",
                    models.IntegerField(default=0, verbose_name="플랫폼 재고"),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="플랫폼 활성 상태"),
                ),
                (
                    "last_sync_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="마지막 동기화"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="생성일시"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="수정일시"),
                ),
                (
                    "platform",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="platforms.platform",
                        verbose_name="플랫폼",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="platform_products",
                        to="products.product",
                        verbose_name="상품",
                    ),
                ),
            ],
            options={
                "verbose_name": "플랫폼 상품",
                "verbose_name_plural": "플랫폼 상품",
                "indexes": [
                    models.Index(
                        fields=["platform", "is_active"],
                        name="platforms_p_platfor_f74993_idx",
                    ),
                    models.Index(
                        fields=["product", "platform"],
                        name="platforms_p_product_1573f9_idx",
                    ),
                ],
                "unique_together": {("platform", "platform_product_id")},
            },
        ),
    ]
